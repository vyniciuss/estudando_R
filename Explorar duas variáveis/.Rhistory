dados <- read.xlsx("indicator_hiv.xlsx", 1)
dados <- read.xlsx("indicator_hiv.xlsx", 1)
dados
names(dados)[1]<-paste("country")
hiv_selected_country <- subset(dados,dados$country %in% c("Australia","Brazil","China","Germany","Japan","United States"))
hiv_selected_country
hiv_country_stack <- melt(hiv_selected_country, id.vars = 1:1)
hiv_country_stack
hiv_country_stack
hiv_country_stack$variable <- as.character(hiv_country_stack$variable)
hiv_country_stack$variable <- substring(hiv_country_stack$variable, 2, nchar(hiv_country_stack$variable))
hiv_country_stack$variable <- substring(hiv_country_stack$variable, 2, nchar(hiv_country_stack$variable))
hiv_country_stack$variable <-  as.Date(hiv_country_stack$variable, format = "%Y")
names(hiv_country_stack)[2] <- "year"
names(hiv_country_stack)[3] <- "HIV_Percent"
hiv_country_stack <- droplevels(hiv_country_stack)
qplot(x=country, y=HIV_Percent,
data = hiv_country_stack,
geom = 'boxplot',
fill = country)
hiv_country_stack
qplot(x=country, y=HIV_Percent,
data = hiv_country_stack,
geom = 'boxplot',
fill = country)
hist(x = hiv_country_stack$HIV_Percent)
hiv_country_stack$HIV_Percent
hiv_country_stack
hiv_country_stack$HIV_Percent <- as.float(hiv_country_stack$HIV_Percent)
hiv_country_stack$HIV_Percent <- as.numeric(hiv_country_stack$HIV_Percent)
hiv_country_stack
hist(x = hiv_country_stack$HIV_Percent)
hist(x = hiv_country_stack$HIV_Percent)
+ scale_x_log10()
hist(x = log(hiv_country_stack$HIV_Percent))
qplot(x = HIV_Percent, data = hiv_country_stack) +
scale_x_log10()
qplot(x = HIV_Percent, data = hiv_country_stack)
qplot(x = HIV_Percent, data = hiv_country_stack) +
scale_x_log10()
View(hiv_country_stack)
View(hiv_selected_country)
hiv_country_stack
dados <- read.xlsx("indicator_hiv.xlsx", 1)
dados <- read.xlsx("indicator_hiv.xlsx", 1)
names(dados)[1]<-paste("country")
hiv_country_stack <- melt(dados, id.vars = 1:1)
hiv_country_stack
hiv_country_stack$variable <- as.character(hiv_country_stack$variable)
hiv_country_stack$variable <- substring(hiv_country_stack$variable, 2, nchar(hiv_country_stack$variable))
#converte ano em data
hiv_country_stack$variable <-  as.Date(hiv_country_stack$variable, format = "%Y")
#muda o nome da coluna para year
names(hiv_country_stack)[2] <- "year"
#muda o nome da coluna
names(hiv_country_stack)[3] <- "HIV_Percent"
hiv_country_stack$HIV_Percent <- as.numeric(hiv_country_stack$HIV_Percent)
qplot(x = HIV_Percent, data = hiv_country_stack) +
scale_x_log10()
qplot(x = HIV_Percent, data = hiv_country_stack)
qplot(x = HIV_Percent, data = hiv_country_stack) +
scale_x_log()
qplot(x = HIV_Percent, data = hiv_country_stack) +
scale_x_log10()
qplot(x=country, y=HIV_Percent,
data = hiv_country_stack,
geom = 'boxplot',
fill = country)
qplot(x=country, y=HIV_Percent,
data = hiv_country_stack[country  %in% c("Australia","Brazil","China","Germany","Japan","United States")],
geom = 'boxplot',
fill = country)
qplot(x=country, y=HIV_Percent,
data = hiv_country_stack[hiv_country_stack$country  %in% c("Australia","Brazil","China","Germany","Japan","United States")],
geom = 'boxplot',
fill = country)
qplot(x=country, y=HIV_Percent,
data = hiv_country_stack[hiv_country_stack$country =  "Brazil"],
qplot(x=country, y=HIV_Percent,
data = hiv_country_stack[country =  "Brazil"],
geom = 'boxplot',
fill = country)
hiv_country_stack[hiv_country_stack$country =  "Brazil"]
hiv_country_stack[hiv_country_stack$country ==  "Brazil"]
hiv_country_stack[country ==  "Brazil"]
hiv_country_stack[country ==  "Brazil"]
hiv_country_stack
hiv_country_stack[country ==  "Brazil"]
hiv_country_stack[hiv_country_stack$country ==  "Brazil"]
subset(hiv_country_stack, country ==  "Brazil")
subset(hiv_country_stack, country %in% c("Australia","Brazil","China","Germany","Japan","United States"))
qplot(x=country, y=HIV_Percent,
data = subset(hiv_country_stack, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
geom = 'boxplot',
fill = country)
qplot(x=country, y=HIV_Percent,
data = subset(hiv_country_stack, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
geom = 'boxplot',
fill = country)+
scale_y_log10()
dados
qplot(x=country, y=HIV_Percent,
data = subset(hiv_country_stack, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
geom = 'scatter',
fill = country)+
scale_y_log10()
ggplot(data = hiv_country_stack,
aes(x = year, y = HIV_Percent)) +
geom_jitter()
ggplot(data = subset(hiv_country_stack, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter()
ggplot(data = subset(hiv_country_stack, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country))
teste <- subset(hiv_country_stack, year >= 1990)
ggplot(data = subset(teste, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country))
teste <- subset(hiv_country_stack, year >= as.Date(1990, format = "%Y"))
teste <- subset(hiv_country_stack, year >= as.Date("1990", format = "%Y"))
ggplot(data = subset(teste, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country))
ggplot(data = subset(teste, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country), size = 2, alpha = 0.2 )
ggplot(data = subset(teste, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country), size = 2, alpha = 0.1 )
ggplot(data = subset(teste, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country), size = 2, alpha = 0.9 )
ggplot(data = subset(teste, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country), size = 2, alpha = 0.9, color = "goldenrod3")
ggplot(data = subset(teste, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country), size = 2, alpha = 0.9)
ggplot(data = hiv_country_stack,
aes(x = year, y = HIV_Percent)) +
geom_line(aes(color = country), size = 1 )
ggplot(data = subset(teste, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_line(aes(color = country), size = 1 )
+ scale_x_log10()
ggplot(data = subset(teste, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country), size = 2, alpha = 0.9)
qplot(x = HIV_Percent, data = hiv_country_stack) +
scale_x_log10()
qplot(x=country, y=HIV_Percent,
data = subset(hiv_country_stack, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
geom = 'boxplot',
fill = country)+
scale_y_log10()
ggplot(data = subset(country_gt_1990, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country), size = 2, alpha = 0.9)
country_gt_1990 <- subset(hiv_country_stack, year >= as.Date("1990", format = "%Y"))
ggplot(data = subset(country_gt_1990, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_jitter(aes(color = country), size = 2, alpha = 0.9)
ggplot(data = subset(country_gt_1990, country %in% c("Australia","Brazil","China","Germany","Japan","United States")),
aes(x = year, y = HIV_Percent)) +
geom_line(aes(color = country), size = 1 )
+ scale_x_log10()
library(rJava)
library("xlsx")
library(ggplot2)
library(rJava)
library("xlsx")
library(ggplot2)
friends <- read.csv("birthdaysExample.csv")
friends <- read.csv("birthdaysExample.csv", header=TRUE)
friends <- read.csv("birthdaysExample.csv", header=TRUE)
getwd()
friends <- read.csv("birthdaysExample.csv", header=TRUE)
table(friends)
table(friends$dates)
friends
friends$dates
friends$dates
friends
length(friends)
length(friends)
length(friends$dates)
qplot(x = dates, data = friends)
qplot(x = dates, data = friends) +
scale_x_continuous(limits = c(0, 50))
birthday <- read.csv("birthdaysExample.csv", header=TRUE)
birthday <- read.csv("birthdaysExample.csv", header=TRUE)
length(birthday$dates)
birthday$new <- strptime(x = birthday$dates, format = "%m/%d/%y")
birthday
birthday$new
df <- data.frame(date = birthday$new,
year = as.numeric(format(birthday$new, format = "%Y")),
month = as.numeric(format(birthday$new, format = "%m")),
day = as.numeric(format(birthday$new, format = "%d")))
df
length(subset(df, df$year == 26 & df$month == 03))
sum(subset(df, df$year == 26 & df$month == 03))
subset(df, df$year == 26 & df$month == 03)
teste <- subset(df, df$year == 26 & df$month == 03)
teste
teste
View(teste)
df
subset(df, df$day == 26 & df$month == 03)
length(subset(df, df$day == 26 & df$month == 03))
subset(df, df$day == 26 & df$month == 03)
sum(subset(df, df$day == 26 & df$month == 03))
subset(df, df$day == 26 & df$month == 03)
length(subset(df, df$day == 26 & df$month == 03))
nrow(subset(df, df$day == 26 & df$month == 03))
qplot(x = month, data = df)
qplot(x = month, data = df, binwidth = 1)
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(limits = c(1, 12), breaks = seq(0, 12, 1))
subset(df, df$month == 1)
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(limits = c(0, 12), breaks = seq(0, 12, 1))
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(limits = c(0, 13), breaks = seq(0, 13, 1))
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(limits = c(0, 15), breaks = seq(0, 15, 1))
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(limits = c(0, 15), breaks = seq(0, 15, 1))
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(limits = c(2, 4), breaks = seq(2, 4, 1))
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(limits = c(1, 4), breaks = seq(1, 4, 1))
scale_x_continuous(limits = c(1, 4), lim = c(1, 13))
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(limits = c(1, 12), lim = c(1, 13))
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(breaks = seq(1, 13, 1),lim = c(1, 13))
qplot(x = aydf, binwidth = 1) +
scale_x_continuous(breaks = seq(1, 32, 1),lim = c(1, 32))
qplot(x = day, binwidth = 1) +
scale_x_continuous(breaks = seq(1, 32, 1),lim = c(1, 32))
qplot(x = day, data = df,binwidth = 1) +
scale_x_continuous(breaks = seq(1, 32, 1),lim = c(1, 32))
qplot(x = df$month_day, data = df, binwidth = 1) +
scale_x_discrete(breaks=1:366)
df <- data.frame(date = birthday$new,
year = as.numeric(format(birthday$new, format = "%Y")),
month = as.numeric(format(birthday$new, format = "%m")),
day = as.numeric(format(birthday$new, format = "%d")),
month_day = as.numeric(format(birthday$new, format = "%j")))
month_day
df
qplot(x = df$month_day, data = df, binwidth = 1) +
scale_x_discrete(breaks=1:366)
library(rJava)
library("xlsx")
library(ggplot2)
# Your task is to investigate the distribution of your friends'
# birth months and days.
# Here some questions you could answer, and we hope you think of others.
# **********************************************************************
# How many people share your birthday? Do you know them?
# (Reserve time with them or save money to buy them a gift!)
# Which month contains the most number of birthdays?
# How many birthdays are in each month?
# Which day of the year has the most number of birthdays?
# Do you have at least 365 friends that have birthdays on everyday
# of the year?
# **********************************************************************
# You will need to do some data munging and additional research to
# complete this task. This task won't be easy, and you may encounter some
# unexpected challenges along the way. We hope you learn a lot from it though.
# You can expect to spend 30 min or more on this task depending if you
# use the provided data or obtain your personal data. We also encourage you
# to use the lubridate package for working with dates. Read over the documentation
# in RStudio and search for examples online if you need help.
# You'll need to export your Facebooks friends' birthdays to a csv file.
# You may need to create a calendar of your Facebook friends’ birthdays
# in a program like Outlook or Gmail and then export the calendar as a
# csv file.
# Once you load the data into R Studio, you can use the strptime() function
# to extract the birth months and birth days. We recommend looking up the
# documentation for the function and finding examples online.
# We've included some links in the Instructor Notes to help get you started.
# Once you've completed your investigation, create a post in the discussions
# that includes:
#   1. any questions you answered, your observations, and summary statistics
#   2. snippets of code that created the plots
#   3. links to the images of your plots
# You can save images by using the ggsave() command.
# ggsave() will save the last plot created.
# For example...
#                  qplot(x = price, data = diamonds)
#                  ggsave('priceHistogram.png')
# ggsave currently recognises the extensions eps/ps, tex (pictex),
# pdf, jpeg, tiff, png, bmp, svg and wmf (windows only).
# Copy and paste all of the code that you used for
# your investigation below the line. Submit it when you are ready.
# ===============================================================================
birthday <- read.csv("birthdaysExample.csv", header=TRUE)
#quantidade de pessoas que compartilharam
length(birthday$dates)
#converte o character para date
birthday$new <- strptime(x = birthday$dates, format = "%m/%d/%y")
#cria um dataframe
df <- data.frame(date = birthday$new,
year = as.numeric(format(birthday$new, format = "%Y")),
month = as.numeric(format(birthday$new, format = "%m")),
day = as.numeric(format(birthday$new, format = "%d")),
month_day = as.numeric(format(birthday$new, format = "%j")))# %j converte para dias do ano entre 1-366
#total de pessoas que compartilham a mesma data de aniversário
nrow(subset(df, df$day == 26 & df$month == 03))
#o dia 14 possui o maior número de aniversariantes
qplot(x = day, data = df,binwidth = 1) +
scale_x_continuous(breaks = seq(1, 32, 1),lim = c(1, 32))
#visualização para comprovar que possui dados para todos os dias do ano
qplot(x = df$month_day, data = df, binwidth = 1) +
scale_x_discrete(breaks=1:366)
qplot(x = month, data = df, binwidth = 1) +
scale_x_continuous(breaks = seq(1, 13, 1),lim = c(1, 13))
library(rJava)
library("xlsx")
library(ggplot2)
# Your task is to investigate the distribution of your friends'
# birth months and days.
# Here some questions you could answer, and we hope you think of others.
# **********************************************************************
# How many people share your birthday? Do you know them?
# (Reserve time with them or save money to buy them a gift!)
# Which month contains the most number of birthdays?
# How many birthdays are in each month?
# Which day of the year has the most number of birthdays?
# Do you have at least 365 friends that have birthdays on everyday
# of the year?
# **********************************************************************
# You will need to do some data munging and additional research to
# complete this task. This task won't be easy, and you may encounter some
# unexpected challenges along the way. We hope you learn a lot from it though.
# You can expect to spend 30 min or more on this task depending if you
# use the provided data or obtain your personal data. We also encourage you
# to use the lubridate package for working with dates. Read over the documentation
# in RStudio and search for examples online if you need help.
# You'll need to export your Facebooks friends' birthdays to a csv file.
# You may need to create a calendar of your Facebook friends’ birthdays
# in a program like Outlook or Gmail and then export the calendar as a
# csv file.
# Once you load the data into R Studio, you can use the strptime() function
# to extract the birth months and birth days. We recommend looking up the
# documentation for the function and finding examples online.
# We've included some links in the Instructor Notes to help get you started.
# Once you've completed your investigation, create a post in the discussions
# that includes:
#   1. any questions you answered, your observations, and summary statistics
#   2. snippets of code that created the plots
#   3. links to the images of your plots
# You can save images by using the ggsave() command.
# ggsave() will save the last plot created.
# For example...
#                  qplot(x = price, data = diamonds)
#                  ggsave('priceHistogram.png')
# ggsave currently recognises the extensions eps/ps, tex (pictex),
# pdf, jpeg, tiff, png, bmp, svg and wmf (windows only).
# Copy and paste all of the code that you used for
# your investigation below the line. Submit it when you are ready.
# ===============================================================================
birthday <- read.csv("birthdaysExample.csv", header=TRUE)
#quantidade de pessoas que compartilharam
length(birthday$dates)
#converte o character para date
birthday$new <- strptime(x = birthday$dates, format = "%m/%d/%y")
#cria um dataframe
df <- data.frame(date = birthday$new,
year = as.numeric(format(birthday$new, format = "%Y")),
month = as.numeric(format(birthday$new, format = "%m")),
day = as.numeric(format(birthday$new, format = "%d")),
month_day = as.numeric(format(birthday$new, format = "%j")))# %j converte para dias do ano entre 1-366
#total de pessoas que compartilham a mesma data de aniversário
nrow(subset(df, df$day == 26 & df$month == 03))
#visualização para comprovar que possui dados para todos os dias do ano
qplot(x = df$month_day, data = df, binwidth = 1) +
scale_x_discrete(breaks=1:366)
qplot(x = day, data = df,binwidth = 1) +
scale_x_continuous(breaks = seq(1, 32, 1),lim = c(1, 32))
library(rJava)
library("xlsx")
library(ggplot2)
# Your task is to investigate the distribution of your friends'
# birth months and days.
# Here some questions you could answer, and we hope you think of others.
# **********************************************************************
# How many people share your birthday? Do you know them?
# (Reserve time with them or save money to buy them a gift!)
# Which month contains the most number of birthdays?
# How many birthdays are in each month?
# Which day of the year has the most number of birthdays?
# Do you have at least 365 friends that have birthdays on everyday
# of the year?
# **********************************************************************
# You will need to do some data munging and additional research to
# complete this task. This task won't be easy, and you may encounter some
# unexpected challenges along the way. We hope you learn a lot from it though.
# You can expect to spend 30 min or more on this task depending if you
# use the provided data or obtain your personal data. We also encourage you
# to use the lubridate package for working with dates. Read over the documentation
# in RStudio and search for examples online if you need help.
# You'll need to export your Facebooks friends' birthdays to a csv file.
# You may need to create a calendar of your Facebook friends’ birthdays
# in a program like Outlook or Gmail and then export the calendar as a
# csv file.
# Once you load the data into R Studio, you can use the strptime() function
# to extract the birth months and birth days. We recommend looking up the
# documentation for the function and finding examples online.
# We've included some links in the Instructor Notes to help get you started.
# Once you've completed your investigation, create a post in the discussions
# that includes:
#   1. any questions you answered, your observations, and summary statistics
#   2. snippets of code that created the plots
#   3. links to the images of your plots
# You can save images by using the ggsave() command.
# ggsave() will save the last plot created.
# For example...
#                  qplot(x = price, data = diamonds)
#                  ggsave('priceHistogram.png')
# ggsave currently recognises the extensions eps/ps, tex (pictex),
# pdf, jpeg, tiff, png, bmp, svg and wmf (windows only).
# Copy and paste all of the code that you used for
# your investigation below the line. Submit it when you are ready.
# ===============================================================================
birthday <- read.csv("birthdaysExample.csv", header=TRUE)
#quantidade de pessoas que compartilharam
length(birthday$dates)
#converte o character para date
birthday$new <- strptime(x = birthday$dates, format = "%m/%d/%y")
#cria um dataframe
df <- data.frame(date = birthday$new,
year = as.numeric(format(birthday$new, format = "%Y")),
month = as.numeric(format(birthday$new, format = "%m")),
day = as.numeric(format(birthday$new, format = "%d")),
month_day = as.numeric(format(birthday$new, format = "%j")))# %j converte para dias do ano entre 1-366
#visualização para comprovar que possui dados para todos os dias do ano
qplot(x = df$month_day, data = df, binwidth = 1) +
scale_x_discrete(breaks=1:366)
nrow(subset(df, df$day == 26 & df$month == 03))
library(rJava)
library("xlsx")
library(ggplot2)
# Your task is to investigate the distribution of your friends'
# birth months and days.
# Here some questions you could answer, and we hope you think of others.
# **********************************************************************
# How many people share your birthday? Do you know them?
# (Reserve time with them or save money to buy them a gift!)
# Which month contains the most number of birthdays?
# How many birthdays are in each month?
# Which day of the year has the most number of birthdays?
# Do you have at least 365 friends that have birthdays on everyday
# of the year?
# **********************************************************************
# You will need to do some data munging and additional research to
# complete this task. This task won't be easy, and you may encounter some
# unexpected challenges along the way. We hope you learn a lot from it though.
# You can expect to spend 30 min or more on this task depending if you
# use the provided data or obtain your personal data. We also encourage you
# to use the lubridate package for working with dates. Read over the documentation
# in RStudio and search for examples online if you need help.
# You'll need to export your Facebooks friends' birthdays to a csv file.
# You may need to create a calendar of your Facebook friends’ birthdays
# in a program like Outlook or Gmail and then export the calendar as a
# csv file.
# Once you load the data into R Studio, you can use the strptime() function
# to extract the birth months and birth days. We recommend looking up the
# documentation for the function and finding examples online.
# We've included some links in the Instructor Notes to help get you started.
# Once you've completed your investigation, create a post in the discussions
# that includes:
#   1. any questions you answered, your observations, and summary statistics
#   2. snippets of code that created the plots
#   3. links to the images of your plots
# You can save images by using the ggsave() command.
# ggsave() will save the last plot created.
# For example...
#                  qplot(x = price, data = diamonds)
#                  ggsave('priceHistogram.png')
# ggsave currently recognises the extensions eps/ps, tex (pictex),
# pdf, jpeg, tiff, png, bmp, svg and wmf (windows only).
# Copy and paste all of the code that you used for
# your investigation below the line. Submit it when you are ready.
# ===============================================================================
birthday <- read.csv("birthdaysExample.csv", header=TRUE)
#quantidade de pessoas que compartilharam
length(birthday$dates)
#converte o character para date
birthday$new <- strptime(x = birthday$dates, format = "%m/%d/%y")
#cria um dataframe
df <- data.frame(date = birthday$new,
year = as.numeric(format(birthday$new, format = "%Y")),
month = as.numeric(format(birthday$new, format = "%m")),
day = as.numeric(format(birthday$new, format = "%d")),
month_day = as.numeric(format(birthday$new, format = "%j")))# %j converte para dias do ano entre 1-366
qplot(x = df$month_day, data = df, binwidth = 1) +
scale_x_discrete(breaks=1:366)
nrow(subset(df, df$day == 26 & df$month == 03))
table(df$month)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point() +
xlim(13, 90)
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
